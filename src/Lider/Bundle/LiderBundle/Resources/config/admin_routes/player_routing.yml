admin_player:
    pattern:  /
    defaults: { _controller: LiderBundle:Player:checkRoute }

admin_player_delete:
    pattern:  /{id}
    defaults: { _controller: LiderBundle:Player:delete }
    methods:  [DELETE]
    requirements:
      id: \d+

admin_player_update:
    pattern:  /{id}
    defaults: { _controller: LiderBundle:Player:update }
    methods:  [PUT]
    requirements:
      id: \d+

admin_player_getbyid:
    pattern:  /{id}
    defaults: { _controller: LiderBundle:Player:list }
    methods:  [GET]
    requirements:
      id: \d+

admin_player_image:
    pattern:  /image/{id}
    defaults: { _controller: LiderBundle:Player:setImage }
    methods:  [POST]
    requirements:
      id: \d+

admin_player_analysis:
    pattern:  /questions/{tournamentId}
    defaults: { _controller: LiderBundle:Player:getPlayerAnalysis, tournamentId: null }
    methods:  [GET]
    requirements:
      tournamentId: \d+

admin_player_range_position:
    pattern:  /positions/{tournamentId}
    defaults: { _controller: LiderBundle:Player:getRangePosition, tournamentId: null }
    methods:  [GET]

#Estadisticas por practicas
admin_player_range_position_by_practice:
    pattern:  /practice
    defaults: { _controller: LiderBundle:Player:getRangePositionByPractice}
    methods:  [GET]


admin_player_notification:
    pattern:  /notification
    defaults: { _controller: LiderBundle:Player:notificationDuel }
    methods:  [GET]

admin_player_notification_all_admin:
    pattern:  /all/notification
    defaults: { _controller: LiderBundle:Player:notificationAll }
    methods:  [GET]

admin_player_notification_admin:
    pattern:  /player/notification
    defaults: { _controller: LiderBundle:Player:notificationPlayer }
    methods:  [GET]

#Resetear password del jugador
admin_player_password_reset:
    pattern:  /password/reset/{id}
    defaults: { _controller: LiderBundle:Player:passwordReset }
    methods:  [GET]

admin_player_updatepointbyduel:
    pattern:  /update/points/{playerId}/{duelId}
    defaults: { _controller: LiderBundle:Player:updatePointsPlayerByDuel }
    methods:  [GET]

#Obtener todas las preguntas de un jugador
admin_player_questions:
    pattern:  /total/questions/{playerId}
    defaults: { _controller: LiderBundle:Player:questionsForPlayer }
    methods:  [GET]
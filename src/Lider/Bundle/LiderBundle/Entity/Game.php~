<?php
namespace Lider\Bundle\LiderBundle\Entity;

use Doctrine\ORM\Mapping as ORM;
use Symfony\Component\Validator\Constraints as Assert;

/**
 * Game class
 * @ORM\Table(name="game")
 * @ORM\Entity(repositoryClass="Lider\Bundle\LiderBundle\Repository\MainRepository")
 */
class Game extends Entity
{
    /**
     * @ORM\Id
     * @ORM\Column(type="integer")
     * @ORM\GeneratedValue(strategy="IDENTITY")
     */
    private $id;
	
	/**
	 * @ORM\ManyToOne(targetEntity="Group",cascade={"persist"})
	 * @ORM\JoinColumn(name="group_id", referencedColumnName="id")
	 * @Assert\NotBlank()
	 */
	private $group;
	
	/**
	 * @ORM\ManyToOne(targetEntity="Team",cascade={"persist"})
	 * @ORM\JoinColumn(name="teamone_id", referencedColumnName="id")
	 * @Assert\NotBlank()
	 */
	private $team_one;
	
	/**
	 * @ORM\ManyToOne(targetEntity="Team",cascade={"persist"})
	 * @ORM\JoinColumn(name="teamtwo_id", referencedColumnName="id")
	 * @Assert\NotBlank()
	 */
	private $team_two;
	
	/**
	 * @ORM\Column(type="integer")
	 * @Assert\NotBlank()
	 */
	private $point_one = 0;
	
	/**
	 * @ORM\Column(type="integer")
	 * @Assert\NotBlank()
	 */
	private $point_two = 0;
	
	/**
	 * @ORM\Column(type="datetime")
	 * @Assert\NotBlank()
	 */
	private $startdate;
	
	/**
	 * @ORM\Column(type="datetime", nullable=true)	 
	 */
	private $enddate;
	
	/**
	 * @ORM\Column(type="boolean")
	 */
	private $active = true;

    /**
     * @ORM\Column(type="boolean")
     */
    private $finished = false;

    /**
     * @ORM\Column(type="integer", nullable=true)
     * @Assert\Range(min=1, max=5)
     */
    private $level;

    /**
     * @ORM\Column(type="integer", nullable=true)
     * @Assert\Range(min=1, max=3)
     */
    private $round;

    /**
     * @ORM\ManyToOne(targetEntity="Tournament",cascade={"persist"}, inversedBy="games")
     * @ORM\JoinColumn(name="tournament_id", referencedColumnName="id")
     * @Assert\NotBlank()
     */
    private $tournament;


    /**
     * Get id
     *
     * @return integer 
     */
    public function getId()
    {
        return $this->id;
    }

    /**
     * Set point_one
     *
     * @param integer $pointOne
     * @return Game
     */
    public function setPointOne($pointOne)
    {
        $this->point_one = $pointOne;

        return $this;
    }

    /**
     * Get point_one
     *
     * @return integer 
     */
    public function getPointOne()
    {
        return $this->point_one;
    }

    /**
     * Set point_two
     *
     * @param integer $pointTwo
     * @return Game
     */
    public function setPointTwo($pointTwo)
    {
        $this->point_two = $pointTwo;

        return $this;
    }

    /**
     * Get point_two
     *
     * @return integer 
     */
    public function getPointTwo()
    {
        return $this->point_two;
    }

    /**
     * Set startdate
     *
     * @param \DateTime $startdate
     * @return Game
     */
    public function setStartdate($startdate)
    {
        $this->startdate = $startdate;

        return $this;
    }

    /**
     * Get startdate
     *
     * @return \DateTime 
     */
    public function getStartdate()
    {
        return $this->startdate;
    }

    /**
     * Set enddate
     *
     * @param \DateTime $enddate
     * @return Game
     */
    public function setEnddate($enddate)
    {
        $this->enddate = $enddate;

        return $this;
    }

    /**
     * Get enddate
     *
     * @return \DateTime 
     */
    public function getEnddate()
    {
        return $this->enddate;
    }

    /**
     * Set active
     *
     * @param boolean $active
     * @return Game
     */
    public function setActive($active)
    {
        $this->active = $active;

        return $this;
    }

    /**
     * Get active
     *
     * @return boolean 
     */
    public function getActive()
    {
        return $this->active;
    }

    /**
     * Set group
     *
     * @param \Lider\Bundle\LiderBundle\Entity\Group $group
     * @return Game
     */
    public function setGroup(\Lider\Bundle\LiderBundle\Entity\Group $group = null)
    {
        $this->group = $group;

        return $this;
    }

    /**
     * Get group
     *
     * @return \Lider\Bundle\LiderBundle\Entity\Group 
     */
    public function getGroup()
    {
        return $this->group;
    }

    /**
     * Set team_one
     *
     * @param \Lider\Bundle\LiderBundle\Entity\Team $teamOne
     * @return Game
     */
    public function setTeamOne(\Lider\Bundle\LiderBundle\Entity\Team $teamOne = null)
    {
        $this->team_one = $teamOne;

        return $this;
    }

    /**
     * Get team_one
     *
     * @return \Lider\Bundle\LiderBundle\Entity\Team 
     */
    public function getTeamOne()
    {
        return $this->team_one;
    }

    /**
     * Set team_two
     *
     * @param \Lider\Bundle\LiderBundle\Entity\Team $teamTwo
     * @return Game
     */
    public function setTeamTwo(\Lider\Bundle\LiderBundle\Entity\Team $teamTwo = null)
    {
        $this->team_two = $teamTwo;

        return $this;
    }

    /**
     * Get team_two
     *
     * @return \Lider\Bundle\LiderBundle\Entity\Team 
     */
    public function getTeamTwo()
    {
        return $this->team_two;
    }

    /**
     * Set finished
     *
     * @param boolean $finished
     * @return Game
     */
    public function setFinished($finished)
    {
        $this->finished = $finished;

        return $this;
    }

    /**
     * Get finished
     *
     * @return boolean 
     */
    public function getFinished()
    {
        return $this->finished;
    }

    /**
     * Set level
     *
     * @param integer $level
     * @return Game
     */
    public function setLevel($level)
    {
        $this->level = $level;

        return $this;
    }

    /**
     * Get level
     *
     * @return integer 
     */
    public function getLevel()
    {
        return $this->level;
    }

    /**
     * Set round
     *
     * @param integer $round
     * @return Game
     */
    public function setRound($round)
    {
        $this->round = $round;

        return $this;
    }

    /**
     * Get round
     *
     * @return integer 
     */
    public function getRound()
    {
        return $this->round;
    }
}
